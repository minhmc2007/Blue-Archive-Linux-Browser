# Ignore ALL build directories in all modules
*/build/
build/

# Local configuration file (SDK location, etc)
/local.properties

# Gradle
.gradle/
.idea/libraries/

# Android Studio / IntelliJ IDEA (Specific files/directories to ignore)
# It's generally recommended to ignore some IDE-specific files, but not all of .idea/
# because it contains useful project configuration.
# However, for personal projects, some developers choose to ignore the entire .idea/ directory.
# For collaborative projects, be more selective.

.idea/workspace.xml # User-specific workspace settings
.idea/caches/ # IDE caches
.idea/libraries/ # Library definitions (often redundant with Gradle)
.idea/runConfigurations/ # Often user-specific run configurations
.idea/vcs.xml # If you prefer to manage VCS outside of IDE settings
.idea/codeStyles/ # If you manage code styles externally
.idea/.name # Project name file
.idea/misc.xml # Generally safe to ignore if you're strict
.idea/modules.xml # Important, don't ignore
# .idea/gradle.xml # Important, don't ignore (unless you're really specific)


# For NDK/JNI projects
.cxx/
.externalNativeBuild/

# Generated files by Android Gradle Plugin
captures/
crashlytics/ # Generated Crashlytics/Firebase Crash Reporting files
outputs/ # APKs, AABs, etc.
report/ # Lint reports, test reports
intermediates/ # Gradle's temporary build files
generated/ # Source code generated by annotation processors (e.g., Dagger, Room)
# Older Gradle versions might have 'build/generated/', newer ones put it directly in 'build/'

# Keystore files (NEVER commit these! They are your app's digital signature.)
*.jks
*.keystore

# If you have a separate file for secrets/API keys (e.g., used by dotenv or similar plugins)
secrets.properties
.env
.env.*

# Project-level debugging/profiling data
profiler/

# macOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db

# Misc temporary files
*.bak
*.swp
*~.nib

# Any specific debug/test APKs or AARs
*.apk
*.aar

# Resource related (usually for generated ones, keep actual source PNGs, XMLs)
# Example: If you have generated vector drawables
# vector_drawable_*.xml

# Lint and test related files
# The actual source rules like 'lint.xml' are kept.
# Only generated reports are ignored.
lint-results-*.html
lint-results-*.xml
test-results/

# If you're using a specific testing framework that generates logs or reports
# e.g., Jacoco reports
jacoco/

# Example for specific files if you use something like Realm and it generates schema files
# default.realm

# Virtual Environment for Python (if used for build scripts)
venv/

# Keep these important files, they define the project structure and build setup
!gradle/wrapper/gradle-wrapper.jar # The Gradle wrapper JAR
!gradlew # Gradle wrapper script for Linux/macOS
!gradlew.bat # Gradle wrapper script for Windows

# Note: The main build.gradle, settings.gradle, and module-level build.gradle files
# are implicitly included because they are not covered by the ignore patterns above.
# This is the desired behavior as they are part of your project's source configuration.
